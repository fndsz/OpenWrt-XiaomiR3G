#
####################################
#  update for Fndsz  #  immortalwrt
####################################
name: ÁºñËØëmir3g_immortalwrtÂõ∫‰ª∂
on:
on: 
  repository_dispatch:
  workflow_dispatch:
    inputs:
      resource_directory:
        type: choice
        description: 'Ë∑ØÁî±Âô®ËµÑÊ∫êÁõÆÂΩï'
        options:
          - "XIAOMI-R3G"
      repo_branch:
        type: choice
        description: 'ÁâàÊú¨ÂàÜÊîØ'
        options:
          - "master"
          - "openwrt-18.06"
          - "openwrt-18.06-dev"
          - "openwrt-18.06-k5.4"
          - "openwrt-21.02"
          - "v21.02.4"
          - "v21.02.3"
          - "v21.02.2"
          - "v21.02.1"
          
      feeds_file:
        type: choice
        description: 'ÊõøÊç¢ËΩØ‰ª∂Ê∫êÈÖçÁΩÆ(feeds.conf.default)'
        options:
        - "true"
        - "false"
      config_file:
        description: 'config Êñá‰ª∂ÂêçÁß∞(.config)'
        default: 'r3g.config'
      files_path:
        type: choice
        description: 'ÂØºÂÖ•Ë°•‰∏ÅÁõÆÂΩï(filesÁõÆÂΩï)'
        options:
        - "true"
        - "false"
      openwrt_patch:
        type: choice
        description: 'ÊâßË°å‰ªìÂ∫ìËÑöÊú¨(openwrt_patch.sh)'
        options:
        - "true"
        - "false"
      befor_patch:
        type: choice
        description: 'ÊâßË°åÁºñËØëÂâçËÑöÊú¨(make_befor.sh)'
        options:
        - "true"
        - "false"
      after_patch:
        type: choice
        description: 'ÊâßË°åÁºñËØëÂêéËÑöÊú¨(make_after.sh)'
        options:
        - "true"
        - "false"
      upload_release:
        type: choice
        description: 'ÂèëÂ∏ÉÂà∞release'
        options:
        - "false"
        - "true"

env:
TIMEZONE: Asia/Shanghai
  
  UPLOAD_ACTIONSRUNS: true
  
  Resoure_DIR: ${{ github.event.inputs.resource_directory }}
  
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  
  REPO_BRANCH: ${{ github.event.inputs.repo_branch }}
  CONFIG_FILE: '${{ github.event.inputs.resource_directory }}/${{ github.event.inputs.config_file }}'
  FEEDS_FILE: '${{ github.event.inputs.resource_directory }}/feeds.conf.default'
  REPLACE_FEEDS: ${{ github.event.inputs.feeds_file }}
  LOAD_FILES: ${{ github.event.inputs.files_path }}
  FILES_PATH: '${{ github.event.inputs.resource_directory }}/files'
  RUN_OPENWRTPATCH: ${{ github.event.inputs.openwrt_patch }}
  OPENWRT_PATCH: '${{ github.event.inputs.resource_directory }}/openwrt_patch.sh'
  RUN_BEFORPATCH: ${{ github.event.inputs.befor_patch }}
  BEFOR_PATCH: '${{ github.event.inputs.resource_directory }}/make_befor.sh'
  RUN_AFTERPATCH: ${{ github.event.inputs.after_patch }}
  AFTER_PATCH: '${{ github.event.inputs.resource_directory }}/make_after.sh'
  UPLOAD_RELEASE: ${{ github.event.inputs.upload_release }}

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Ê£ÄÂá∫‰ªìÂ∫ìÊï∞ÊçÆ
      uses: actions/checkout@main

    - name: ÂàùÂßãÂåñÁºñËØëÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: ÂÖãÈöÜÊ∫ê‰ª£Á†Å
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Âä†ËΩΩÂõ∫‰ª∂ÈÖçÁΩÆ
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Êõ¥Êñ∞ËΩØ‰ª∂Ê∫ê
      run: cd openwrt && ./scripts/feeds update -a

    - name: ÂÆâË£ÖËΩØ‰ª∂Ê∫ê
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: SSHËøûÊé•Êìç‰Ωú
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: ‰∏ãËΩΩÂåÖ
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: ÁºñËØëÁöÑÂõ∫‰ª∂
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Ê£ÄÊü•Á©∫Èó¥‰ΩøÁî®ÊÉÖÂÜµ
      if: (!cancelled())
      run: df -hT

    - name: ‰∏ä‰º†binÁõÆÂΩï
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Êï¥ÁêÜÊñá‰ª∂
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: ‰∏ä‰º†Âõ∫‰ª∂
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: ‰∏ä‰º†Âõ∫‰ª∂Ëá≥cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"

    - name: ‰∏ä‰º†Âõ∫‰ª∂Ëá≥WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

    - name: ÁîüÊàêreleaseÊ†áÁ≠æ
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "üîó [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "üîó [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"

    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞Release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Ê∏ÖÁêÜReleasesÊóßÊï∞ÊçÆ
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
